Log


### Class names
#   2013-12-07
    LabeledShape
        Shape
            LinePartition (dict)        as attribute: line_part; module: rename
                Colineation             as attribute: lines (list)
                    Line
        LPointPartition (dict)          as attribute: lpoint_part; module: rename
            Colabeling                  as attribute: lpoint_specs (set)
                LabeledPoint
                    Point

### ElementCell class
#   2013-12-10
    Analogous methods from SGColumn and SGColabeling:
        __init__()                      __init__()
        collinear()                     colabeled()
        get_maximal_lines_from()        (set.add())
        maximal()                       (set)
        __str__()                       __str__()
        listing()                       listing()
    But this doesn't seem like enough to justify creating a parent class.
    Conclusion: abandon ElementCell.

### Colabeling
#   2013-12-10
    Why implement the collection as a set of lpoint specs
    1.  As a set of LabeledPoint objects. Problem: a set does not use an 
        element's __eq__ method
    2.  As a list of lpoints. Problem: have to implement equivalent methods to
        set methods
    3.  As a set of lpoint specs. Problem: have to unpack and repack lpoints


#   line_partitions_are_equal. LinePartition.__eq__()?

Colineation, Colabeling. Reclaim methods: __str__, listing, etc.

Colineation.__add__?

#   2013-12-20
Shape.subtract_colineations(). Should return Line list or Colineation?