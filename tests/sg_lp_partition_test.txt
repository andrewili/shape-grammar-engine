#   sg_lp_partition_test.txt

    >>> import sg_labeled_point
    >>> import sg_line
    >>> import sg_lp_partition

    ### construct, represent

    >>> def non_lpoints_for_init_test():
    ...     line_01 = sg_line.SGLine.from_short_spec(0, 1)
    ...     lpoint_00a = sg_labeled_point.SGLabeledPoint(0, 0, 'a')
    ...     non_lpoints = [lpoint_00a, line_01]
    ...     return non_lpoints
    >>> non_lpoints = non_lpoints_for_init_test()
    >>> non_lpoint_partition = sg_lp_partition.SGLPPartition(non_lpoints)
    You're trying to make a partition with non labeled-points

    >>> empty_lpoint_partition = sg_lp_partition.SGLPPartition.new_empty()

    >>> print empty_lpoint_partition
    []
    >>> print empty_lpoint_partition.listing()
    <empty lp_partition>
    >>> empty_lpoint_partition.is_empty()
    True

    >>> def lpoints_for_init_test():
    ...     lpoint_00a = sg_labeled_point.SGLabeledPoint(0, 0, 'a')
    ...     lpoint_11a = sg_labeled_point.SGLabeledPoint(1, 1, 'a')
    ...     lpoint_22b = sg_labeled_point.SGLabeledPoint(2, 2, 'b')
    ...     lpoint_33b = sg_labeled_point.SGLabeledPoint(3, 3, 'b')
    ...     lpoints = [lpoint_33b, lpoint_22b, lpoint_11a, lpoint_00a]
    ...     return lpoints
    >>> lpoints = lpoints_for_init_test()
    >>> lpp = sg_lp_partition.SGLPPartition(lpoints)
    
    >>> print lpp
    [(0, 0, a), (1, 1, a), (2, 2, b), (3, 3, b)]

    >>> print lpp.listing()
    a:
        (0.0, 0.0)
        (1.0, 1.0)
    b:
        (2.0, 2.0)
        (3.0, 3.0)

    from_specs 

    >>> lpoint_specs = [(3, 3, 'b'), (2, 2, 'b'), (1, 1, 'a'), (0, 0, 'a')]
    >>> lpoint_partition_from_specs = sg_lp_partition.SGLPPartition.from_specs(lpoint_specs)
    >>> print lpoint_partition_from_specs
    [(0, 0, a), (1, 1, a), (2, 2, b), (3, 3, b)]

    ### compare
    #   __eq__(), __ne__()
    >>> test_specs = [(3, 3, 'b'), (2, 2, 'b'), (1, 1, 'a'), (0, 0, 'a')]
    >>> different_specs = [(3, 3, 'a'), (2, 2, 'b'), (1, 1, 'b'), (0, 0, 'a')]
    >>> lpoint_partition_test = sg_lp_partition.SGLPPartition.from_specs(test_specs)
    >>> lpoint_partition_equal = sg_lp_partition.SGLPPartition.from_specs(test_specs)
    >>> lpoint_partition_unequal = sg_lp_partition.SGLPPartition.from_specs(different_specs)
    >>> lpoint_partition_empty = sg_lp_partition.SGLPPartition.new_empty()

    >>> lpoint_partition_test == lpoint_partition_equal
    True
    >>> lpoint_partition_test == lpoint_partition_unequal
    False
    >>> lpoint_partition_test == lpoint_partition_empty
    False

    >>> lpoint_partition_test != lpoint_partition_equal
    False
    >>> lpoint_partition_test != lpoint_partition_unequal
    True
    >>> lpoint_partition_test != lpoint_partition_empty
    True
    