#   point_test.txt

    >>> import point

    ### construct
__init__()
    >>> p1 = point.Point(1, 2)
    
    >>> p1.spec
    (1, 2)
    >>> p1.x
    1
    >>> p1.y
    2

from_spec(x, y)
    >>> p = point.Point.from_spec(2, 3)

    >>> p.spec
    (2, 3)

    ### relations ###
__eq__(other)
    >>> p =  point.Point(0, 0)
    
    >>> p == point.Point(0, 0)
    True
    >>> p == point.Point(0, 1)
    False
    >>> p == point.Point(1, 0)
    False

__ge__(other)
    >>> p  = point.Point( 0,  0)
    
    >>> p >= point.Point(-1,  2)
    True
    >>> p >= point.Point( 0, -1)
    True
    >>> p >= point.Point( 0,  0)
    True
    >>> p >= point.Point( 0,  2)
    False
    >>> p >= point.Point( 2,  2)
    False

__gt__(other)
    >>> p1 = point.Point( 0,  0)
    
    >>> p1 > point.Point(-1,  2)
    True
    >>> p1 > point.Point( 0, -1)
    True
    >>> p1 > point.Point( 0,  0)
    False
    >>> p1 > point.Point( 0,  2)
    False
    >>> p1 > point.Point( 0,  0)
    False

__le__(other)
    >>> p  =  point.Point( 0,  0)
    
    >>> p <=  point.Point( 1,  2)
    True
    >>> p <=  point.Point( 0,  1)
    True
    >>> p <=  point.Point( 0,  0)
    True
    >>> p <=  point.Point( 0, -2)
    False
    >>> p <=  point.Point(-2, -2)
    False

__lt__(other)
    >>> p1 = point.Point( 0,  0)
    
    >>> p1 < point.Point( 1, -2)
    True
    >>> p1 < point.Point( 0,  1)
    True
    >>> p1 < point.Point( 0,  0)
    False
    >>> p1 < point.Point( 0, -2)
    False
    >>> p1 < point.Point(-2, -2)
    False


__ne__(other)
    >>> p  = point.Point(0, 0)
    
    >>> p != point.Point(0, 0)
    False
    >>> p != point.Point(0, 1)
    True
    >>> p != point.Point(1, 0)
    True

    ### represent
__str__()
    >>> print point.Point(1, 2)
    (1, 2)
    >>> print point.Point(2, 3).listing()
    (2.0, 3.0)
    
