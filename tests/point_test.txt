#   point_test.txt

    >>> import point

### construct, represent
#   __init__(), listing()
    >>> point_init = point.Point(1, 2)
    
    >>> point_init.spec
    (1, 2)
    >>> point_init.x
    1
    >>> point_init.y
    2

    >>> print point.Point(2, 3).listing()
    (2, 3)
    >>> print point.Point(2, 3).listing(1)
    (2.0, 3.0)
    >>> print point.Point(2, 3).listing(2.1)
    (2.00, 3.00)
    >>> print point.Point(2, 3).listing(-1)
    (2, 3)
    >>> print point.Point(2, 3).listing(-1.3)
    (2, 3)

    >>> point_non_num_1 = point.Point('a', 1)
    You're trying to make a Point with non-numbers

    >>> point_non_num_2 = point.Point(2.3, 'b')
    You're trying to make a Point with non-numbers
    
#   from_spec(x, y)
    >>> point_from_spec = point.Point.from_spec(2, 3)

    >>> point_from_spec.spec
    (2, 3)

    >>> print point.Point(1, 2)
    (1, 2)

    >>> x = 2.2
    >>> x.__class__
    <type 'float'>

### relations ###
#   __eq__(other)
    >>> point_eq =  point.Point(0, 0)
    
    >>> point_eq == point.Point(0, 0)
    True
    >>> point_eq == point.Point(0, 1)
    False
    >>> point_eq == point.Point(1, 0)
    False

#   __ge__(other)
    >>> point_ge  = point.Point( 0,  0)
    
    >>> point_ge >= point.Point(-1,  2)
    True
    >>> point_ge >= point.Point( 0, -1)
    True
    >>> point_ge >= point.Point( 0,  0)
    True
    >>> point_ge >= point.Point( 0,  2)
    False
    >>> point_ge >= point.Point( 2,  2)
    False

#   __gt__(other)
    >>> point_gt = point.Point( 0,  0)
    
    >>> point_gt > point.Point(-1,  2)
    True
    >>> point_gt > point.Point( 0, -1)
    True
    >>> point_gt > point.Point( 0,  0)
    False
    >>> point_gt > point.Point( 0,  2)
    False
    >>> point_gt > point.Point( 0,  0)
    False

#   __le__(other)
    >>> point_le  =  point.Point( 0,  0)
    
    >>> point_le <=  point.Point( 1,  2)
    True
    >>> point_le <=  point.Point( 0,  1)
    True
    >>> point_le <=  point.Point( 0,  0)
    True
    >>> point_le <=  point.Point( 0, -2)
    False
    >>> point_le <=  point.Point(-2, -2)
    False

#   __lt__(other)
    >>> point_lt = point.Point( 0,  0)
    
    >>> point_lt < point.Point( 1, -2)
    True
    >>> point_lt < point.Point( 0,  1)
    True
    >>> point_lt < point.Point( 0,  0)
    False
    >>> point_lt < point.Point( 0, -2)
    False
    >>> point_lt < point.Point(-2, -2)
    False

#   __ne__(other)
    >>> point_ne  = point.Point(0, 0)
    
    >>> point_ne != point.Point(0, 0)
    False
    >>> point_ne != point.Point(0, 1)
    True
    >>> point_ne != point.Point(1, 0)
    True

