#   labeled_point_test.txt

    >>> import labeled_point
    >>> import line

### construct
#   __init__(), __str__(), listing()
    >>> lpoint_non_point = labeled_point.LabeledPoint('a', 2, 'a')
    Point.__init__(): The arguments must both be numbers
    >>> lpoint_non_string = labeled_point.LabeledPoint(1, 2, 3)
    LabeledPoint.__init__(): The label must be a string

    >>> lpoint_empty_label = labeled_point.LabeledPoint(1, 2, '')
    >>> print lpoint_empty_label
    (1, 2, )

    >>> lpoint_init = labeled_point.LabeledPoint(1, 2, 'a')
    >>> lpoint_init.x
    1
    >>> lpoint_init.y
    2
    >>> lpoint_init.label
    'a'
    >>> lpoint_init.spec
    (1, 2, 'a')
    >>> lpoint_init.point.spec
    (1, 2)
    >>> print lpoint_init
    (1, 2, a)
    >>> print lpoint_init.listing()
    (1, 2, a)
    >>> print lpoint_init.listing(2)
    (1.00, 2.00, a)
    >>> print lpoint_init.listing(2.2)
    (1.00, 2.00, a)
    >>> print lpoint_init.listing(-2)
    (1, 2, a)
    >>> print lpoint_init.listing(-2.3)
    (1, 2, a)

### relations
#   are_lpoint_specs()    ### Moved from Colabeling
    >>> labeled_point.LabeledPoint.are_lpoint_specs([1, 2, 3])
    False
    >>> l1 = line.Line.from_spec(1, 1, 2, 2)
    >>> l2 = line.Line.from_spec(2, 2, 3, 3)
    >>> labeled_point.LabeledPoint.are_lpoint_specs([l1, l2])
    False
    >>> labeled_point.LabeledPoint.are_lpoint_specs([(1, 1, 'a'), (2, 2, 2)])
    False
    >>> labeled_point.LabeledPoint.are_lpoint_specs([(1, 1, 'a'), (2, 2, 'b')])
    True

#   is_lpoint_spec(cls)
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 2, 3))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 'b', 'c'))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec(('a', 2, 'c'))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 2, 'c', 'd'))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 'b'))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec(('a', 2))
    False
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 2, 'c'))
    True
    >>> labeled_point.LabeledPoint.is_lpoint_spec((1, 2, ''))
    True

#   __eq__(other)
    >>> lpoint_eq =  labeled_point.LabeledPoint(0, 0, 'o')
    
    >>> lpoint_eq == labeled_point.LabeledPoint(0, 0, 'o')
    True
    >>> lpoint_eq == labeled_point.LabeledPoint(1, 0, 'o')
    False
    >>> lpoint_eq == labeled_point.LabeledPoint(0, 1, 'o')
    False
    >>> lpoint_eq == labeled_point.LabeledPoint(0, 0, 'x')
    False

#   __ge__(other)
    >>> lpoint_ge  = labeled_point.LabeledPoint( 0,  0, 'o')
    
    >>> lpoint_ge >= labeled_point.LabeledPoint(-1, -1, 'z')
    True
    >>> lpoint_ge >= labeled_point.LabeledPoint( 0,  0, 'n')
    True
    >>> lpoint_ge >= labeled_point.LabeledPoint( 0,  0, 'o')
    True
    >>> lpoint_ge >= labeled_point.LabeledPoint( 0,  0, 'z')
    False
    >>> lpoint_ge >= labeled_point.LabeledPoint( 2,  2, 'z')
    False

#   __gt__(other)
    >>> lpoint_gt  = labeled_point.LabeledPoint( 0,  0, 'o')
    
    >>> lpoint_gt  > labeled_point.LabeledPoint(-1, -1, 'z')
    True
    >>> lpoint_gt  > labeled_point.LabeledPoint( 0,  0, 'n')
    True
    >>> lpoint_gt  > labeled_point.LabeledPoint( 0,  0, 'o')
    False
    >>> lpoint_gt  > labeled_point.LabeledPoint( 0,  0, 'z')
    False
    >>> lpoint_gt  > labeled_point.LabeledPoint( 2,  2, 'z')
    False

#   __le__(other)
    >>> lpoint_le  = labeled_point.LabeledPoint( 0,  0, 'o')
    
    >>> lpoint_le <= labeled_point.LabeledPoint( 1,  1, 'a')
    True
    >>> lpoint_le <= labeled_point.LabeledPoint( 0,  0, 'p')
    True
    >>> lpoint_le <= labeled_point.LabeledPoint( 0,  0, 'o')
    True
    >>> lpoint_le <= labeled_point.LabeledPoint( 0,  0, 'a')
    False
    >>> lpoint_le <= labeled_point.LabeledPoint(-2, -2, 'a')
    False

#   __lt__(other)
    >>> lpoint_lt  = labeled_point.LabeledPoint( 0,  0, 'o')
    
    >>> lpoint_lt  < labeled_point.LabeledPoint( 1,  1, 'a')
    True
    >>> lpoint_lt  < labeled_point.LabeledPoint( 0,  0, 'p')
    True
    >>> lpoint_lt  < labeled_point.LabeledPoint( 0,  0, 'o')
    False
    >>> lpoint_lt  < labeled_point.LabeledPoint( 0,  0, 'a')
    False
    >>> lpoint_lt  < labeled_point.LabeledPoint(-2, -2, 'a')
    False

#   __ne__(other)
    >>> lpoint_ne =  labeled_point.LabeledPoint(0, 0, 'o')
    
    >>> lpoint_ne != labeled_point.LabeledPoint(0, 0, 'o')
    False
    >>> lpoint_ne != labeled_point.LabeledPoint(1, 0, 'o')
    True
    >>> lpoint_ne != labeled_point.LabeledPoint(0, 1, 'o')
    True
    >>> lpoint_ne != labeled_point.LabeledPoint(0, 0, 'x')
    True

### other
#   _print_error_message()
    >>> test_method_name = 'test_method()'
    >>> test_message = 'This is a test'
    >>> labeled_point.LabeledPoint._print_error_message(test_method_name, test_message)
    LabeledPoint.test_method(): This is a test
