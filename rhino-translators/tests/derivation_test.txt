#   derivation_test.txt

    >>> import derivation
    >>> import rule
    >>> import shape

    >>> def make_deriv_parts():
    ...     def make_deriv_shapes():
    ...         labeled_oblong_line_specs = [
    ...             ((0, 0, 0), (0, 0, 2)),
    ...             ((0, 0, 0), (0, 4, 0)),
    ...             ((0, 0, 0), (8, 0, 0)),
    ...             ((0, 0, 2), (0, 4, 2)),
    ...             ((0, 0, 2), (8, 0, 2)),
    ...             ((0, 4, 0), (0, 4, 2)),
    ...             ((0, 4, 0), (8, 4, 0)),
    ...             ((0, 4, 2), (8, 4, 2)),
    ...             ((8, 0, 0), (8, 0, 2)),
    ...             ((8, 0, 0), (8, 4, 0)),
    ...             ((8, 0, 2), (8, 4, 2)),
    ...             ((8, 4, 0), (8, 4, 2))]
    ...         labeled_obshort_line_specs = [
    ...             ((0, 0, 0), (0, 0, 2)),
    ...             ((0, 0, 0), (0, 4, 0)),
    ...             ((0, 0, 0), (4, 0, 0)),
    ...             ((0, 0, 2), (0, 4, 2)),
    ...             ((0, 0, 2), (4, 0, 2)),
    ...             ((0, 4, 0), (0, 4, 2)),
    ...             ((0, 4, 0), (4, 4, 0)),
    ...             ((0, 4, 2), (4, 4, 2)),
    ...             ((4, 0, 0), (4, 0, 2)),
    ...             ((4, 0, 0), (4, 4, 0)),
    ...             ((4, 0, 2), (4, 4, 2)),
    ...             ((4, 4, 0), (4, 4, 2))]
    ...         unlabeled_obshort_line_specs = [
    ...             ((0, 0, 0), (0, 0, 2)),
    ...             ((0, 0, 0), (0, 4, 0)),
    ...             ((0, 0, 0), (4, 0, 0)),
    ...             ((0, 0, 2), (0, 4, 2)),
    ...             ((0, 0, 2), (4, 0, 2)),
    ...             ((0, 4, 0), (0, 4, 2)),
    ...             ((0, 4, 0), (4, 4, 0)),
    ...             ((0, 4, 2), (4, 4, 2)),
    ...             ((4, 0, 0), (4, 0, 2)),
    ...             ((4, 0, 0), (4, 4, 0)),
    ...             ((4, 0, 2), (4, 4, 2)),
    ...             ((4, 4, 0), (4, 4, 2))]
    ...         def make_labeled_oblong():
    ...             line_specs = labeled_oblong_line_specs
    ...             lpoint_specs = [((0, 2, 1), 'a')]
    ...             labeled_oblong = shape.Shape(
    ...                 'labeled-oblong', line_specs, lpoint_specs)
    ...             return labeled_oblong
    ...         def make_labeled_obshort():
    ...             line_specs = labeled_obshort_line_specs
    ...             lpoint_specs = [((0, 2, 1), 'a')]
    ...             labeled_obshort = shape.Shape(
    ...                 'labeled-obshort', line_specs, lpoint_specs)
    ...             return labeled_obshort
    ...         def make_unlabeled_obshort():
    ...             line_specs = unlabeled_obshort_line_specs
    ...             lpoint_specs = []
    ...             shape_unlabeled_obshort = shape.Shape(
    ...                 'unlabeled-obshort', line_specs, lpoint_specs)
    ...             return shape_unlabeled_obshort
    ...         def make_lpoint():
    ...             line_specs = []
    ...             lpoint_specs = [((0, 0, 0), 'a')]
    ...             lpoint = shape.Shape(
    ...                 'labeled-point', line_specs, lpoint_specs)
    ...             return lpoint
    ...         def make_labeled_oblong_shorten_oblong():
    ...             line_specs = labeled_obshort_line_specs
    ...             lpoint_specs = [((0, 2, 1), 'a')]
    ...             shape_out = shape.Shape(
    ...                 'labeled-oblong_shorten-oblong',
    ...                 line_specs,
    ...                 lpoint_specs)
    ...             return shape_out
    ...         def make_labeled_oblong_shorten_oblong_erase_lpoint():
    ...             line_specs = unlabeled_obshort_line_specs
    ...             lpoint_specs = []
    ...             shape_out = shape.Shape(
    ...                 'labeled-oblong_shorten-oblong_erase-lpoint',
    ...                 line_specs,
    ...                 lpoint_specs)
    ...             return shape_out
    ...         labeled_oblong = make_labeled_oblong()
    ...         labeled_obshort = make_labeled_obshort()
    ...         unlabeled_obshort = make_unlabeled_obshort()
    ...         lpoint = make_lpoint()
    ...         empty_shape = shape.Shape('empty-shape', [], [])
    ...         labeled_oblong_shorten_oblong = (
    ...             make_labeled_oblong_shorten_oblong())
    ...         labeled_oblong_shorten_oblong_erase_lpoint = (
    ...             make_labeled_oblong_shorten_oblong_erase_lpoint())
    ...         return (
    ...             labeled_oblong,
    ...             labeled_obshort,
    ...             unlabeled_obshort,
    ...             lpoint,
    ...             empty_shape,
    ...             labeled_oblong_shorten_oblong,
    ...             labeled_oblong_shorten_oblong_erase_lpoint
    ...         )
    ...     (   labeled_oblong,
    ...         labeled_obshort,
    ...         unlabeled_obshort,
    ...         lpoint,
    ...         empty_shape,
    ...         labeled_oblong_shorten_oblong,
    ...         labeled_oblong_shorten_oblong_erase_lpoint
    ...     ) = make_deriv_shapes()
    ...     initial_shape = labeled_oblong
    ...     rule_shorten_oblong = rule.Rule(
    ...         'shorten-oblong',
    ...         labeled_oblong,
    ...         labeled_obshort)
    ...     rule_erase_lpoint = rule.Rule(
    ...         'erase-lpoint',
    ...         lpoint,
    ...         empty_shape)
    ...     rules = [rule_shorten_oblong, rule_erase_lpoint]
    ...     next_shapes = [
    ...         labeled_oblong_shorten_oblong, 
    ...         labeled_oblong_shorten_oblong_erase_lpoint]
    ...     deriv_parts = (initial_shape, rules, next_shapes)
    ...     return (deriv_parts)

### __init__, __repr__, __str__
    >>> labeled_oblong, obshort_rules, obshort_next_shapes = (
    ...     make_deriv_parts())
    >>> deriv_bad_initial_shape = derivation.Derivation(
    ...     'kilroy', obshort_rules, obshort_next_shapes)
    The arguments must be a shape, a list of rules, and a list of shapes
    >>> deriv_bad_rules = derivation.Derivation(
    ...     labeled_oblong, obshort_next_shapes, obshort_next_shapes)
    The arguments must be a shape, a list of rules, and a list of shapes
    >>> deriv_bad_shapes = derivation.Derivation(
    ...     labeled_oblong, obshort_rules, obshort_rules)
    The arguments must be a shape, a list of rules, and a list of shapes
    >>> test_deriv = derivation.Derivation(
    ...     labeled_oblong, obshort_rules, obshort_next_shapes)

    ??? print(test_deriv)                       ###
    # derivation file version 1.00                           --chen liang 2007/08/06
    shape    erase-lpoint_L
        name 
        coords 0 0 2 1
    <BLANKLINE>
        point 0 a
    shape    erase-lpoint_R
        name
    <BLANKLINE>
    shape    labeled-oblong
        name 
        coords 0 0 0 0
        coords 1 0 0 2
        coords 2 0 2 1
        coords 3 0 4 0
        coords 4 0 4 2
        coords 5 8 0 0
        coords 6 8 0 2
        coords 7 8 4 0
        coords 8 8 4 2
    <BLANKLINE>
        line 0 0 1
        line 1 0 3
        line 10 6 8
        line 11 7 8
        line 2 0 5
        line 3 1 4
        line 4 1 6
        line 5 3 4
        line 6 3 7
        line 7 4 8
        line 8 5 6
        line 9 5 7
        point 2 a
    shape    shorten-oblong_L
        name 
        coords 0 0 0 0
        coords 1 0 0 2
        coords 2 0 2 1
        coords 3 0 4 0
        coords 4 0 4 2
        coords 5 8 0 0
        coords 6 8 0 2
        coords 7 8 4 0
        coords 8 8 4 2
    <BLANKLINE>
        line 0 0 1
        line 1 0 3
        line 10 6 8
        line 11 7 8
        line 2 0 5
        line 3 1 4
        line 4 1 6
        line 5 3 4
        line 6 3 7
        line 7 4 8
        line 8 5 6
        line 9 5 7
        point 2 a
    shape    shorten-oblong_R
        name 
        coords 0 0 0 0
        coords 1 0 0 2
        coords 10 4 4 0
        coords 11 4 4 2
        coords 2 0 2 1
        coords 3 0 4 0
        coords 4 0 4 2
        coords 5 4 0 0
        coords 6 4 0 2
        coords 7 4 4 0
        coords 8 4 0 0
        coords 9 4 0 2
    <BLANKLINE>
        line 0 0 1
        line 1 0 3
        line 10 8 9
        line 11 10 11
        line 2 0 8
        line 3 1 4
        line 4 1 6
        line 5 3 4
        line 6 3 7
        line 7 4 11
        line 8 5 7
        line 9 6 11
        point 2 a
    initial    labeled-oblong
    rule    erase-lpoint    erase-lpoint_L -> erase-lpoint_R
    rule    shorten-oblong    shorten-oblong_L -> shorten-oblong_R
    # derivation record
    shape    labeled-oblong
        name 
        coords 0 0 0 0
        coords 1 0 0 2
        coords 2 0 2 1
        coords 3 0 4 0
        coords 4 0 4 2
        coords 5 8 0 0
        coords 6 8 0 2
        coords 7 8 4 0
        coords 8 8 4 2
    <BLANKLINE>
        line 0 0 1
        line 1 0 3
        line 10 6 8
        line 11 7 8
        line 2 0 5
        line 3 1 4
        line 4 1 6
        line 5 3 4
        line 6 3 7
        line 7 4 8
        line 8 5 6
        line 9 5 7
        point 2 a
    rule    shorten-oblong
    shape    labeled-oblong_shorten-oblong
        name 
        coords 10 0 4 2
        coords 11 4 4 2
        coords 12 4 4 2
        coords 13 0 4 2
        coords 14 0 4 2
        coords 15 4 4 2
        coords 16 0 4 2
        coords 17 4 4 2
        coords 9 0 2 1
    <BLANKLINE>
        line 12 10 11
        line 13 11 12
        line 14 13 14
        line 15 14 12
        line 16 15 12
        line 17 16 17
        line 18 17 11
        line 19 13 15
        line 20 16 10
        line 21 16 13
        line 22 17 15
        line 23 10 14
        point 9 a
    rule    erase-lpoint
    shape    labeled-oblong_shorten-oblong_erase-lpoint
        name 
        coords 10 0 4 2
        coords 11 4 4 2
        coords 12 4 4 2
        coords 13 0 4 2
        coords 14 0 4 2
        coords 15 4 4 2
        coords 16 0 4 2
        coords 17 4 4 2
        coords 9 0 2 1
    <BLANKLINE>
        line 12 10 11
        line 13 11 12
        line 14 13 14
        line 15 14 12
        line 16 15 12
        line 17 16 17
        line 18 17 11
        line 19 13 15
        line 20 16 10
        line 21 16 13
        line 22 17 15
        line 23 10 14

### __repr__
    >>> print(test_deriv.__repr__())
    ((labeled-oblong, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (8, 0, 0), (8, 0, 2), (8, 4, 0), (8, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), [(shorten-oblong, (labeled-oblong, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (8, 0, 0), (8, 0, 2), (8, 4, 0), (8, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (labeled-obshort, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])), (erase-lpoint, (labeled-point, [(0, 0, 0)], [], [(0, 'a')]), (empty-shape, [], [], []))], [(labeled-oblong_shorten-oblong, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (labeled-oblong_shorten-oblong_erase-lpoint, [(0, 0, 0), (0, 0, 2), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 2), (0, 4), (1, 3), (1, 5), (2, 3), (2, 6), (3, 7), (4, 5), (4, 6), (5, 7), (6, 7)], [])])

### _make_rules_repr
    >>> rules_repr = test_deriv._make_rules_repr()
    >>> print(rules_repr)
    [(shorten-oblong, (labeled-oblong, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (8, 0, 0), (8, 0, 2), (8, 4, 0), (8, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (labeled-obshort, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])), (erase-lpoint, (labeled-point, [(0, 0, 0)], [], [(0, 'a')]), (empty-shape, [], [], []))]

### _make_next_shape_repr
    >>> next_shapes_repr = test_deriv._make_next_shapes_repr()
    >>> print(next_shapes_repr)
    [(labeled-oblong_shorten-oblong, [(0, 0, 0), (0, 0, 2), (0, 2, 1), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (labeled-oblong_shorten-oblong_erase-lpoint, [(0, 0, 0), (0, 0, 2), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 2), (0, 4), (1, 3), (1, 5), (2, 3), (2, 6), (3, 7), (4, 5), (4, 6), (5, 7), (6, 7)], [])]

### new_from_drv_text_lines                     ##  extra space: 'name '
    >>> obshort_drv_text_lines = [
    ...     '# derivation file version 1.00                           --chen liang 2007/08/06',
    ...     '<BLANKLINE>',
    ...     'shape    erase-lpoint_L',
    ...     '    name ',
    ...     '    coords 0 0 2 1',
    ...     '<BLANKLINE>',
    ...     '    point 0 a',
    ...     'shape    erase-lpoint_R',
    ...     '    name ',
    ...     '<BLANKLINE>',
    ...     'shape    labeled-oblong',
    ...     '    name ',
    ...     '    coords 0 0 0 0',
    ...     '    coords 1 0 0 2',
    ...     '    coords 2 0 2 1',
    ...     '    coords 3 0 4 0',
    ...     '    coords 4 0 4 2',
    ...     '    coords 5 8 0 0',
    ...     '    coords 6 8 0 2',
    ...     '    coords 7 8 4 0',
    ...     '    coords 8 8 4 2',
    ...     '<BLANKLINE>',
    ...     '    line 0 0 1',
    ...     '    line 1 0 3',
    ...     '    line 10 6 8',
    ...     '    line 11 7 8',
    ...     '    line 2 0 5',
    ...     '    line 3 1 4',
    ...     '    line 4 1 6',
    ...     '    line 5 3 4',
    ...     '    line 6 3 7',
    ...     '    line 7 4 8',
    ...     '    line 8 5 6',
    ...     '    line 9 5 7',
    ...     '    point 2 a',
    ...     'shape    shorten-oblong_L',
    ...     '    name ',
    ...     '    coords 0 0 0 0',
    ...     '    coords 1 0 0 2',
    ...     '    coords 2 0 2 1',
    ...     '    coords 3 0 4 0',
    ...     '    coords 4 0 4 2',
    ...     '    coords 5 8 0 0',
    ...     '    coords 6 8 0 2',
    ...     '    coords 7 8 4 0',
    ...     '    coords 8 8 4 2',
    ...     '<BLANKLINE>',
    ...     '    line 0 0 1',
    ...     '    line 1 0 3',
    ...     '    line 10 6 8',
    ...     '    line 11 7 8',
    ...     '    line 2 0 5',
    ...     '    line 3 1 4',
    ...     '    line 4 1 6',
    ...     '    line 5 3 4',
    ...     '    line 6 3 7',
    ...     '    line 7 4 8',
    ...     '    line 8 5 6',
    ...     '    line 9 5 7',
    ...     '    point 2 a',
    ...     'shape    shorten-oblong_R',
    ...     '    name ',
    ...     '    coords 0 0 0 0',
    ...     '    coords 1 0 0 2',
    ...     '    coords 10 4 4 0',
    ...     '    coords 11 4 4 2',
    ...     '    coords 2 0 2 1',
    ...     '    coords 3 0 4 0',
    ...     '    coords 4 0 4 2',
    ...     '    coords 5 4 0 0',
    ...     '    coords 6 4 0 2',
    ...     '    coords 7 4 4 0',
    ...     '    coords 8 4 0 0',
    ...     '    coords 9 4 0 2',
    ...     '<BLANKLINE>',
    ...     '    line 0 0 1',
    ...     '    line 1 0 3',
    ...     '    line 10 8 9',
    ...     '    line 11 10 11',
    ...     '    line 2 0 8',
    ...     '    line 3 1 4',
    ...     '    line 4 1 6',
    ...     '    line 5 3 4',
    ...     '    line 6 3 7',
    ...     '    line 7 4 11',
    ...     '    line 8 5 7',
    ...     '    line 9 6 11',
    ...     '    point 2 a',
    ...     'initial    labeled-oblong',
    ...     'rule    erase-lpoint    erase-lpoint_L -> erase-lpoint_R',
    ...     'rule    shorten-oblong    shorten-oblong_L -> shorten-oblong_R',
    ...     '# derivation record',
    ...     'shape    labeled-oblong',
    ...     '    name ',                        ### extra space!
    ...     '    coords 0 0 0 0',
    ...     '    coords 1 0 0 2',
    ...     '    coords 2 0 2 1',
    ...     '    coords 3 0 4 0',
    ...     '    coords 4 0 4 2',
    ...     '    coords 5 8 0 0',
    ...     '    coords 6 8 0 2',
    ...     '    coords 7 8 4 0',
    ...     '    coords 8 8 4 2',
    ...     '<BLANKLINE>',
    ...     '    line 0 0 1',
    ...     '    line 1 0 3',
    ...     '    line 10 6 8',
    ...     '    line 11 7 8',
    ...     '    line 2 0 5',
    ...     '    line 3 1 4',
    ...     '    line 4 1 6',
    ...     '    line 5 3 4',
    ...     '    line 6 3 7',
    ...     '    line 7 4 8',
    ...     '    line 8 5 6',
    ...     '    line 9 5 7',
    ...     '    point 2 a',
    ...     'rule    shorten-oblong',
    ...     'shape    labeled-oblong_shorten-oblong',
    ...     '    name ',
    ...     '    coords 10 0 4 2',
    ...     '    coords 11 4 4 2',
    ...     '    coords 12 4 4 2',
    ...     '    coords 13 0 4 2',
    ...     '    coords 14 0 4 2',
    ...     '    coords 15 4 4 2',
    ...     '    coords 16 0 4 2',
    ...     '    coords 17 4 4 2',
    ...     '    coords 9 0 2 1',
    ...     '<BLANKLINE>',
    ...     '    line 12 10 11',
    ...     '    line 13 11 12',
    ...     '    line 14 13 14',
    ...     '    line 15 14 12',
    ...     '    line 16 15 12',
    ...     '    line 17 16 17',
    ...     '    line 18 17 11',
    ...     '    line 19 13 15',
    ...     '    line 20 16 10',
    ...     '    line 21 16 13',
    ...     '    line 22 17 15',
    ...     '    line 23 10 14',
    ...     '    point 9 a',
    ...     'rule    erase-lpoint',
    ...     'shape    labeled-oblong_shorten-oblong_erase-lpoint',
    ...     '    name ',
    ...     '    coords 10 0 4 2',
    ...     '    coords 11 4 4 2',
    ...     '    coords 12 4 4 2',
    ...     '    coords 13 0 4 2',
    ...     '    coords 14 0 4 2',
    ...     '    coords 15 4 4 2',
    ...     '    coords 16 0 4 2',
    ...     '    coords 17 4 4 2',
    ...     '    coords 9 0 2 1',
    ...     '<BLANKLINE>',
    ...     '    line 12 10 11',
    ...     '    line 13 11 12',
    ...     '    line 14 13 14',
    ...     '    line 15 14 12',
    ...     '    line 16 15 12',
    ...     '    line 17 16 17',
    ...     '    line 18 17 11',
    ...     '    line 19 13 15',
    ...     '    line 20 16 10',
    ...     '    line 21 16 13',
    ...     '    line 22 17 15',
    ...     '    line 23 10 14'
    ... ]

    >>> obshort_derivation = (
    ...     derivation.Derivation.new_from_drv_text_lines(
    ...         obshort_drv_text_lines))
    >>> print(obshort_derivation.__repr__())
    ((labeled-oblong, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), [(shorten-oblong, (shorten-oblong_L, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (shorten-oblong_R, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (4.0, 0.0, 0.0), (4.0, 0.0, 2.0), (4.0, 4.0, 0.0), (4.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])), (erase-lpoint, (erase-lpoint_L, [(0.0, 2.0, 1.0)], [], [(0, 'a')]), (erase-lpoint_R, [], [], []))], [(labeled-oblong, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (labeled-oblong_shorten-oblong, [(0.0, 2.0, 1.0), (0.0, 4.0, 2.0), (4.0, 4.0, 2.0)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2), (1, 2), (1, 2), (2, 2), (2, 2), (2, 2), (2, 2)], [(0, 'a')]), (labeled-oblong_shorten-oblong_erase-lpoint, [(0.0, 4.0, 2.0), (4.0, 4.0, 2.0)], [(0, 0), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [])])



### new_from_drv_text_lines: called functions
    >>> def make_shorten_oblong():
    ...     shorten_oblong_text_lines = [
    ...         'shape    shorten-oblong_L',
    ...         '    name ',
    ...         '    coords 0 0 0 0',
    ...         '    coords 1 0 0 2',
    ...         '    coords 2 0 2 1',
    ...         '    coords 3 0 4 0',
    ...         '    coords 4 0 4 2',
    ...         '    coords 5 8 0 0',
    ...         '    coords 6 8 0 2',
    ...         '    coords 7 8 4 0',
    ...         '    coords 8 8 4 2',
    ...         '<BLANKLINE>',
    ...         '    line 0 0 1',
    ...         '    line 1 0 3',
    ...         '    line 10 6 8',
    ...         '    line 11 7 8',
    ...         '    line 2 0 5',
    ...         '    line 3 1 4',
    ...         '    line 4 1 6',
    ...         '    line 5 3 4',
    ...         '    line 6 3 7',
    ...         '    line 7 4 8',
    ...         '    line 8 5 6',
    ...         '    line 9 5 7',
    ...         '    point 2 a',
    ...         'shape    shorten-oblong_R',
    ...         '    name ',
    ...         '    coords 0 0 0 0',
    ...         '    coords 1 0 0 2',
    ...         '    coords 10 4 4 0',
    ...         '    coords 11 4 4 2',
    ...         '    coords 2 0 2 1',
    ...         '    coords 3 0 4 0',
    ...         '    coords 4 0 4 2',
    ...         '    coords 5 4 0 0',
    ...         '    coords 6 4 0 2',
    ...         '    coords 7 4 4 0',
    ...         '    coords 8 4 0 0',
    ...         '    coords 9 4 0 2',
    ...         '<BLANKLINE>',
    ...         '    line 0 0 1',
    ...         '    line 1 0 3',
    ...         '    line 10 8 9',
    ...         '    line 11 10 11',
    ...         '    line 2 0 8',
    ...         '    line 3 1 4',
    ...         '    line 4 1 6',
    ...         '    line 5 3 4',
    ...         '    line 6 3 7',
    ...         '    line 7 4 11',
    ...         '    line 8 5 7',
    ...         '    line 9 6 11',
    ...         '    point 2 a',
    ...         'rule    shorten-oblong    shorten-oblong_L -> shorten-oblong_R'
    ...     ]
    ...     shorten_oblong = rule.Rule.new_from_rul_text_lines(
    ...         shorten_oblong_text_lines)
    ...     return shorten_oblong

### _wrap_up_pending_grammar_shape
    >>> def make_parts_for_wrap_up_pending_grammar_shape():
    ...     shape_text_lines = [
    ...         'shape    labeled-oblong',
    ...         '    name ',
    ...         '    coords 0 0 0 0',
    ...         '    coords 1 0 0 2',
    ...         '    coords 2 0 2 1',
    ...         '    coords 3 0 4 0',
    ...         '    coords 4 0 4 2',
    ...         '    coords 5 8 0 0',
    ...         '    coords 6 8 0 2',
    ...         '    coords 7 8 4 0',
    ...         '    coords 8 8 4 2',
    ...         '<BLANKLINE>',
    ...         '    line 0 0 1',
    ...         '    line 1 0 3',
    ...         '    line 10 6 8',
    ...         '    line 11 7 8',
    ...         '    line 2 0 5',
    ...         '    line 3 1 4',
    ...         '    line 4 1 6',
    ...         '    line 5 3 4',
    ...         '    line 6 3 7',
    ...         '    line 7 4 8',
    ...         '    line 8 5 6',
    ...         '    line 9 5 7',
    ...         '    point 2 a',
    ...     ]
    ...     derivation_shapes_dict = {}
    ...     return (shape_text_lines, derivation_shapes_dict)
    >>> shape_text_lines, derivation_shapes_dict = (
    ...     make_parts_for_wrap_up_pending_grammar_shape())
    >>> derivation.Derivation._wrap_up_pending_grammar_shape(
    ...     shape_text_lines, derivation_shapes_dict)
    >>> for shape_name in derivation_shapes_dict:
    ...     print(derivation_shapes_dict[shape_name].__repr__())
    (labeled-oblong, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])

### _wrap_up_pending_derivation_shape
    >>> def make_parts_for_wrap_up_pending_derivation_shape():
    ...     labeled_oblong_text_lines = [
    ...         'shape    labeled-oblong',
    ...         '    name ',
    ...         '    coords 0 0 0 0',
    ...         '    coords 1 0 0 2',
    ...         '    coords 2 0 2 1',
    ...         '    coords 3 0 4 0',
    ...         '    coords 4 0 4 2',
    ...         '    coords 5 8 0 0',
    ...         '    coords 6 8 0 2',
    ...         '    coords 7 8 4 0',
    ...         '    coords 8 8 4 2',
    ...         '<BLANKLINE>',
    ...         '    line 0 0 1',
    ...         '    line 1 0 3',
    ...         '    line 10 6 8',
    ...         '    line 11 7 8',
    ...         '    line 2 0 5',
    ...         '    line 3 1 4',
    ...         '    line 4 1 6',
    ...         '    line 5 3 4',
    ...         '    line 6 3 7',
    ...         '    line 7 4 8',
    ...         '    line 8 5 6',
    ...         '    line 9 5 7',
    ...         '    point 2 a',
    ...     ]
    ...     labeled_oblong = shape.Shape.new_from_is_text_lines(
    ...         labeled_oblong_text_lines)
    ...     next_shapes = [labeled_oblong]
    ...     return (labeled_oblong_text_lines, next_shapes)
    >>> text_lines, next_shapes = (
    ...     make_parts_for_wrap_up_pending_derivation_shape())
    >>> derivation.Derivation._wrap_up_pending_derivation_shape(
    ...     text_lines, next_shapes)
    >>> for next_shape in next_shapes:
    ...     print(next_shape.__repr__())
    (labeled-oblong, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])
    (labeled-oblong, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')])

### _look_up_derivation_rule
    >>> def make_parts_for_look_up_derivation_rule():
    ...     tokens = ['shorten-oblong']
    ...     shorten_oblong = make_shorten_oblong()
    ...     grammar_rules_dict = {shorten_oblong.name: shorten_oblong}
    ...     return (tokens, grammar_rules_dict)
    >>> tokens, grammar_rules_dict = (
    ...     make_parts_for_look_up_derivation_rule())
    >>> new_derivation_rule = derivation.Derivation._look_up_derivation_rule(
    ...     tokens, grammar_rules_dict)
    >>> print(new_derivation_rule.__repr__())
    (shorten-oblong, (shorten-oblong_L, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (8.0, 0.0, 0.0), (8.0, 0.0, 2.0), (8.0, 4.0, 0.0), (8.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]), (shorten-oblong_R, [(0.0, 0.0, 0.0), (0.0, 0.0, 2.0), (0.0, 2.0, 1.0), (0.0, 4.0, 0.0), (0.0, 4.0, 2.0), (4.0, 0.0, 0.0), (4.0, 0.0, 2.0), (4.0, 4.0, 0.0), (4.0, 4.0, 2.0)], [(0, 1), (0, 3), (0, 5), (1, 4), (1, 6), (3, 4), (3, 7), (4, 8), (5, 6), (5, 7), (6, 8), (7, 8)], [(2, 'a')]))

#?? _get_sorted_drv_text_lines
    ??? (   initial_shape_text_lines,
    ...     rules_text_lines,
    ...     next_shapes_text_lines
    ... ) = derivation.Derivation._get_sorted_drv_text_lines(drv_text_lines)
    ??? print(initial_shape_text_lines)
    '<initial-shape-text-lines>'
    ??? print(rules_text_lines)
    '<rules-text-lines>'
    ??? print(next_shapes_text_lines)
    '<next-shapes-text-lines>'

### get_final_shape
    >>> test_deriv_final_shape = test_deriv.get_final_shape()
    >>> print(test_deriv_final_shape.__repr__())
    (labeled-oblong_shorten-oblong_erase-lpoint, [(0, 0, 0), (0, 0, 2), (0, 4, 0), (0, 4, 2), (4, 0, 0), (4, 0, 2), (4, 4, 0), (4, 4, 2)], [(0, 1), (0, 2), (0, 4), (1, 3), (1, 5), (2, 3), (2, 6), (3, 7), (4, 5), (4, 6), (5, 7), (6, 7)], [])
