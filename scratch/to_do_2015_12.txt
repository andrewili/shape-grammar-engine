to_do_2015_12


2-part set-up (external interpreter): finish

  • Implement SG toolbar
  • Package: wrap up == DEFER
      • Tool bar
      • Menu items. See Workspace editor
      • Plug-in 
  • Documentation: 
      • Website
      • Videos
      • Errors, Q+A 

  • Labeled points: text dots or hatch annotations? == ABANDON 2016-01-11!
    • Desiderata
      • Should embody point and text information
      • Should be transparent to the user: creating, editing, printing
    • Commands
      • Show labeled points as 'hatch annotations'
          • Hide text dots for system use
          • Add hatch annotations 
      • Show labeled points as text dots
        • Hide hatch annotations
        • Show text dots
      • New labeled point (as hatch annotation)
        • Script
        • Add and hide text dot
      • Edit hatch annotation
      • Update hatch annotations (after changing text dots)


Integrated set-up (internal interpreter): ideas


User actions

  • New grammar
  • New rule
  • New (initial) shape 
  • Duplicate shape
  • Duplicate rule
  • Apply to prt(C) the rule A -> B 
      • (): all C, all A -> B
      • (prt(C)): all A -> B
      • (prt(C), A -> B): C, A -> B
      • (prt(C), A, B): C, A -> B
  • Draw derivation [of selected shape]


Applying a rule

  • User draws a grammar (at least one available shape and at least one rule)
  • User indicates that he's finished
      • System attaches forward pointers to available shapes as appropriate. 
        A forward pointer contains the left shape and the transformation under 
        which the left shape is a part of the current shape
  • User selects a current shape and rules (0, 1, or more)
      • If there are eligible rule transformations:
          • For every eligible rule transformation (where t(A) ≤ C):
              • System calculates the next shape
              • System draws the next shape in the (new) top row
              • System adds the next shape to the current shape's forward 
                pointer [necessary?]
              • System attaches a backward pointer to the next shape 
      • Else:
          • System says: No next shape

In: grammar vs. controller
