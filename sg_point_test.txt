#   sg_point_test.txt
#   2013-10-04
#   Extends 2013-09-24

    >>> import sg_point
    >>> def point_from_coords(x, y):
    ...     return sg_point.SGPoint(x, y)


__init__()
    >>> p1 = sg_point.SGPoint(1, 2)
    
    >>> p1.spec
    (1, 2)
    >>> p1.x
    1
    >>> p1.y
    2
    >>> print p1
    (1.0, 2.0)
    >>> print p1.listing()
    (1.0, 2.0)

from_spec(x, y)
    >>> p = sg_point.SGPoint.from_spec(2, 3)

    >>> p.spec
    (2, 3)

#### relations ####
__eq__(other)
    >>> p =  point_from_coords(0, 0)
    
    >>> p == point_from_coords(0, 0)
    True
    >>> p == point_from_coords(0, 1)
    False
    >>> p == point_from_coords(1, 0)
    False

__ge__(other)
    >>> p  = point_from_coords( 0,  0)
    
    >>> p >= point_from_coords(-1,  2)
    True
    >>> p >= point_from_coords( 0, -1)
    True
    >>> p >= point_from_coords( 0,  0)
    True
    >>> p >= point_from_coords( 0,  2)
    False
    >>> p >= point_from_coords( 2,  2)
    False

__gt__(other)
    >>> p1 = point_from_coords( 0,  0)
    
    >>> p1 > point_from_coords(-1,  2)
    True
    >>> p1 > point_from_coords( 0, -1)
    True
    >>> p1 > point_from_coords( 0,  0)
    False
    >>> p1 > point_from_coords( 0,  2)
    False
    >>> p1 > point_from_coords( 0,  0)
    False

__le__(other)
    >>> p  =  point_from_coords( 0,  0)
    
    >>> p <=  point_from_coords( 1,  2)
    True
    >>> p <=  point_from_coords( 0,  1)
    True
    >>> p <=  point_from_coords( 0,  0)
    True
    >>> p <=  point_from_coords( 0, -2)
    False
    >>> p <=  point_from_coords(-2, -2)
    False

__lt__(other)
    >>> p1 = point_from_coords( 0,  0)
    
    >>> p1 < point_from_coords( 1, -2)
    True
    >>> p1 < point_from_coords( 0,  1)
    True
    >>> p1 < point_from_coords( 0,  0)
    False
    >>> p1 < point_from_coords( 0, -2)
    False
    >>> p1 < point_from_coords(-2, -2)
    False


__ne__(other)
    >>> p  = point_from_coords(0, 0)
    
    >>> p != point_from_coords(0, 0)
    False
    >>> p != point_from_coords(0, 1)
    True
    >>> p != point_from_coords(1, 0)
    True

#### representation ####
__str__()
    >>> print point_from_coords(1, 2)
    (1.0, 2.0)
    >>> print point_from_coords(2, 3).listing()
    (2.0, 3.0)
    
